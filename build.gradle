plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.openapi.generator" version "7.8.0"
}

group = 'com.theaaronrussell'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/openapi/src/main/java'
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.23'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/static/apispec.yaml"
	outputDir = "$buildDir/generated/openapi"
	cleanupOutput = true
	globalProperties.set([
	        apis: "",
			models: ""
	])
	configOptions = [
	        interfaceOnly: "true",
			apiPackage: "com.theaaronrussell.studentsync.api",
			modelPackage: "com.theaaronrussell.studentsync.model",
			useSpringBoot3: "true",
			documentationProvider: "none",
			useBeanValidation: "false",
			skipDefaultInterface: "true"
	]
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn tasks.openApiGenerate
