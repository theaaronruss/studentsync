openapi: 3.0.0
info:
  title: StudentSync API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /students:
    post:
      tags:
        - Students
      summary: Add a new student
      description: Add a new student to the system
      operationId: addStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStudentRequestDTO'
      responses:
        '201':
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
  /students/{id}:
    get:
      tags:
        - Students
      summary: Retrieve a student
      description: Get information about a student from the system
      operationId: getStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    put:
      tags:
        - Students
      summary: Update a student
      description: Update a student in the system
      operationId: updateStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStudentRequestDTO'
      responses:
        '200':
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    delete:
      tags:
        - Students
      summary: Delete a student
      description: Delete a student from the system
      operationId: deleteStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      responses:
        '204':
          description: Student deleted
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  schemas:
    StudentDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The student's ID
          example: 461be284-e0e0-4873-8831-ca2500e31e39
        firstName:
          type: string
          description: The student's first name
          example: John
        lastName:
          type: string
          description: The student's last name
          example: Doe
        birthDate:
          type: string
          format: date
          description: The student's birth date
          example: 2001-03-17
    ErrorDTO:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Student with ID of 461be284-e0e0-4873-8831-ca2500e31e39 not found
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the error
          example: 2024-10-10T20:47:28.370269-04:00
    AddStudentRequestDTO:
      type: object
      description: A request to add a new student
      properties:
        firstName:
          type: string
          description: The student's first name
          example: John
        lastName:
          type: string
          description: The student's last name
          example: Doe
        birthDate:
          type: string
          format: date
          description: The student's birth date
          example: 2001-03-17
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
