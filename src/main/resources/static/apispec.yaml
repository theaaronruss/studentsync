openapi: 3.0.0
info:
  title: StudentSync API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /students:
    post:
      tags:
        - Students
      summary: Add a new student
      description: Add a new student to the system
      operationId: addStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStudentRequestDTO'
      responses:
        '201':
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
  /students/{id}:
    get:
      tags:
        - Students
      summary: Retrieve a student
      description: Get information about a student from the system
      operationId: getStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    put:
      tags:
        - Students
      summary: Update a student
      description: Update a student in the system
      operationId: updateStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStudentRequestDTO'
      responses:
        '200':
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    delete:
      tags:
        - Students
      summary: Delete a student
      description: Delete a student from the system
      operationId: deleteStudent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The student's ID
      responses:
        '204':
          description: Student deleted
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /teachers:
    post:
      tags:
        - Teachers
      summary: Add a new teacher
      description: Add a new teacher to the system
      operationId: addTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTeacherRequestDTO'
      responses:
        '201':
          description: Teacher created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDTO'
  /teachers/{id}:
    get:
      tags:
        - Teachers
      summary: Retrieve a teacher
      description: Get information about a teacher from the system
      operationId: getTeacher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The teacher's ID
      responses:
        '200':
          description: Teacher found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDTO'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    put:
      tags:
        - Teachers
      summary: Update a teacher
      description: Update a teacher in the system
      operationId: updateTeacher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The teacher's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTeacherRequestDTO'
      responses:
        '200':
          description: Teacher updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDTO'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    delete:
      tags:
        - Teachers
      summary: Delete a teacher
      description: Delete a teacher from the system
      operationId: deleteTeacher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The teacher's ID
      responses:
        '204':
          description: Teacher deleted
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /academic-terms:
    post:
      tags:
        - Academic Terms
      summary: Add a new academic term
      description: Add a new academic term to the system
      operationId: addAcademicTerm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAcademicTermRequestDTO'
      responses:
        '201':
          description: Academic term created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicTermDTO'
components:
  schemas:
    StudentDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The student's ID
          example: 461be284-e0e0-4873-8831-ca2500e31e39
        firstName:
          type: string
          description: The student's first name
          example: John
        lastName:
          type: string
          description: The student's last name
          example: Doe
        birthDate:
          type: string
          format: date
          description: The student's birth date
          example: 2001-03-17
    TeacherDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The teacher's ID
          example: 245285c9-fa47-451d-8642-014985a32fad
        firstName:
          type: string
          description: The teacher's first name
          example: Martha
        lastName:
          type: string
          description: The teacher's last name
          example: Smith
        emailAddress:
          type: string
          description: The teacher's email address
          example: martha.smith@school.edu
        phoneNumber:
          type: string
          description: The teacher's phone number
          example: 4575550123
        startDate:
          type: string
          format: date
          description: The teacher's starting date of employment
          example: 2022-06-21
    AcademicTermDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The academic term's ID
          example: 5a13abde-33ca-45d2-8acd-beb2ec6c835f
        name:
          type: string
          description: The academic term's name
          example: Fall 2022
        startDate:
          type: string
          format: date
          description: The academic term's start date
          example: 2024-09-01
        endDate:
          type: string
          format: date
          description: The academic term's end date
          example: 2024-12-15
    AddStudentRequestDTO:
      type: object
      description: A request to add a new student
      properties:
        firstName:
          type: string
          description: The student's first name
          example: John
        lastName:
          type: string
          description: The student's last name
          example: Doe
        birthDate:
          type: string
          format: date
          description: The student's birth date
          example: 2001-03-17
    AddTeacherRequestDTO:
      type: object
      properties:
        firstName:
          type: string
          description: The teacher's first name
          example: Martha
        lastName:
          type: string
          description: The teacher's last name
          example: Smith
        emailAddress:
          type: string
          description: The teacher's email address
          example: martha.smith@school.edu
        phoneNumber:
          type: string
          description: The teacher's phone number
          example: 4575550123
        startDate:
          type: string
          format: date
          description: The teacher's starting date of employment
          example: 2022-06-21
    AddAcademicTermRequestDTO:
      type: object
      properties:
        name:
          type: string
          description: The academic term's name
          example: Fall 2022
        startDate:
          type: string
          format: date
          description: The academic term's start date
          example: 2024-09-01
        endDate:
          type: string
          format: date
          description: The academic term's end date
          example: 2024-12-15
    ErrorDTO:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Invalid request
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the error
          example: 2024-10-10T20:47:28.370269-04:00
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
